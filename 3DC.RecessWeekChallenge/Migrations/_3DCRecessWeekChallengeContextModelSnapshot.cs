// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _3DC.RecessWeekChallenge.Data;

namespace _3DC.RecessWeekChallenge.Migrations
{
    [DbContext(typeof(_3DCRecessWeekChallengeContext))]
    partial class _3DCRecessWeekChallengeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_3DC.RecessWeekChallenge.Models.LeaderboardRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HackerrankFinalScore")
                        .HasColumnType("int");

                    b.Property<int>("HackerrankScore")
                        .HasColumnType("int");

                    b.Property<int>("HackerrankTimeInt")
                        .HasColumnType("int");

                    b.Property<string>("HackerrankUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LabScore")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeaderboardRow");
                });
#pragma warning restore 612, 618
        }
    }
}
